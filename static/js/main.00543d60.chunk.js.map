{"version":3,"sources":["index.js"],"names":["rowStyle","display","squareStyle","boardStyle","containerStyle","instructionsStyle","buttonStyle","arr","Array","console","log","Square","current","game","setCurrent","setGame","num","winner","className","style","onClick","a","splice","Board","setWinner","Game","useState","useEffect","a1","a2","a3","a4","a5","a6","a7","a8","x","o","forEach","item","JSON","stringify","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00543d60.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst rowStyle = {\n  display: 'flex'\n}\n\nconst squareStyle = {\n  'width':'60px',\n  'height':'60px',\n  'backgroundColor': '#ddd',\n  'margin': '4px',\n  'display': 'flex',\n  'justifyContent': 'center',\n  'alignItems': 'center',\n  'fontSize': '20px',\n  'color': 'white'\n}\n\nconst boardStyle = {\n  'backgroundColor': '#eee',\n  'width': '208px',\n  'alignItems': 'center',\n  'justifyContent': 'center',\n  'display': 'flex',\n  'flexDirection': 'column',\n  'border': '3px #eee solid'\n}\n\nconst containerStyle = {\n  'display': 'flex',\n  'alignItems': 'center',\n  'flexDirection': 'column'\n}\n\nconst instructionsStyle = {\n  'marginTop': '5px',\n  'marginBottom': '5px',\n  'fontWeight': 'bold',\n  'fontSize': '16px',\n}\n\nconst buttonStyle = {\n  'marginTop': '15px',\n  'marginBottom': '16px',\n  'width': '80px',\n  'height': '40px',\n  'backgroundColor': '#8acaca',\n  'color': 'white',\n  'fontSize': '16px',\n}\n\nlet arr = new Array(9);\nconsole.log(arr, 'test');\n\nconst Square = ({current, game, setCurrent, setGame, num, winner})=>{\n\n \n\n  const handleClick = ()=>{\n    var a = [...game];\n\n    if (a[num]){\n\n    }\n    \n    else{\n     a.splice(num, 1, current);\n     setGame(a);\n     \n      if (current==='x'){\n        setCurrent('o');\n      }\n      else if(current==='o'){\n        setCurrent('x');\n    }\n  }\n  }\n\n  const handleNothing = ()=>{\n\n  }\n\n\n\n    return (\n      <div\n        className=\"square\"\n        style={squareStyle}\n        onClick={winner === 'none' ? handleClick : handleNothing}\n        >\n        {game[num]}\n      </div>\n    );\n  \n    }\n  \n\nconst Board = ({game, setGame, current, setCurrent, winner, setWinner })=>{\n\n  const handleClear = ()=>{\n    setGame(arr);\n    setCurrent('x');\n    setWinner('none');\n    }\n   \n  \n    return (\n      <div style={containerStyle} className=\"gameBoard\">\n        <div className=\"status\" style={instructionsStyle}>Next player: {current}</div>\n        <div className=\"winner\" style={instructionsStyle}>Winner: {winner}</div>\n        <button  onClick = {handleClear} style={buttonStyle}>Reset</button>\n        <div style={boardStyle}>\n\n          <div className=\"board-row\" style={rowStyle}>\n            <Square game ={game} setGame={setGame} current={current} setCurrent={setCurrent} num={0} winner ={winner} />\n            <Square game ={game} setGame={setGame} current={current} setCurrent={setCurrent} num={1} winner ={winner} />\n            <Square game ={game} setGame={setGame} current={current} setCurrent={setCurrent} num={2} winner ={winner} />\n          </div>\n\n          <div className=\"board-row\" style={rowStyle}>\n            <Square game ={game} setGame={setGame} current={current} setCurrent={setCurrent} num={3} winner ={winner} />\n            <Square game ={game} setGame={setGame} current={current} setCurrent={setCurrent} num={4} winner ={winner} />\n            <Square game ={game} setGame={setGame} current={current} setCurrent={setCurrent} num={5} winner ={winner} />\n          </div>\n\n          <div className=\"board-row\" style={rowStyle}>\n            <Square game ={game} setGame={setGame} current={current} setCurrent={setCurrent} num={6} winner ={winner} />\n            <Square game ={game} setGame={setGame} current={current} setCurrent={setCurrent} num={7} winner ={winner} />\n            <Square game ={game} setGame={setGame} current={current} setCurrent={setCurrent} num={8} winner ={winner} />\n          \n          </div>\n        </div>\n      </div>\n    );\n  }\n\n\nconst Game = ()=> {\n  const [game, setGame] = useState(arr);\n  const [winner, setWinner] = useState('none');\n  const[current, setCurrent] = useState('x');\n\n  useEffect(() => {\n    var a1 = [game[0], game[1], game[2]];\n    var a2 = [game[0], game[3], game[6]];\n    var a3 = [game[0], game[4], game[8]];\n    var a4 = [game[3], game[4], game[5]];\n    var a5 = [game[6], game[7], game[8]];\n    var a6 = [game[1], game[4], game[7]];\n    var a7 = [game[2], game[5], game[8]];\n    var a8 = [game[2], game[4], game[6]];\n    var items = [a1, a2, a3, a4, a5, a6, a7, a8];\n    var x = ['x','x','x'];\n    var o = ['o', 'o', 'o'];\n\n    items.forEach((item)=>{\n      if(JSON.stringify(item) === JSON.stringify(x)){\n        setWinner('x');\n      }\n\n      else if(JSON.stringify(item) === JSON.stringify(o)){\n        setWinner('o');\n      }\n    });\n\n\n  }, [game, setWinner]);\n  \n    return (\n      <div className=\"game\">\n        <div className=\"game-board\" >\n          <Board game={game} setGame={setGame} current={current} setCurrent={setCurrent} winner={winner} setWinner={setWinner}/>\n        </div>\n      </div>\n    );\n  }\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}